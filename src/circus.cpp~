#include "circus.h"

using namespace std;

bool cmp(person p1, person p2) {
	if (p1.h == p2.h)
		return p1.w < p2.w;
	else
		return p1.h < p2.h;
}

void Circus::calc_LIS(vector<int>& weight, vector<int>& height) {
	vector<vector<int>> Lweight(weight.size());
	vector<vector<int>> Lheight(weight.size());
	int max, maxIndex;
	Lweight[0].push_back(weight[0]);
	Lheight[0].push_back(height[0]);
	for (int i = 1; i < weight.size(); i++) {
		for (int j = 0; j < i; j++) {
			if ((weight[j] <= weight[i]) &&
					(Lheight[i].size() < Lheight[j].size() + 1)) {
				Lweight[i] = Lweight[j];
				Lheight[i] = Lheight[j];
			}
		}
		Lweight[i].push_back(weight[i]);
		Lheight[i].push_back(height[i]);
	}
	max = Lweight[0].size();
	maxIndex = 0;
	for (int i = 1; i < weight.size(); i++) {
		if (Lweight[i].size() > max) {
			max = Lweight[i].size();
			maxIndex = i;
		}
	}

	// print
	cout << "Max Height of the tower : " << Lweight[maxIndex].size() << endl;
	for (int i = 0; i < Lweight[maxIndex].size(); i++)
		cout << Lweight[maxIndex][i] << " " << Lheight[maxIndex][i] << endl;
}

void Circus::makeTower() {
	vector<int> weight, height;
	cout << "Enter no of people : ";
	int size;
	cin >> size;
	cout << "Enter the heights and weights : " << endl;
	for (int i = 0; i < size; ++i) cin >> p[i].w >> p[i].h;
	sort(p, p + size, cmp);
	for (int i = 0; i < size; i++) {
		cout << p[i].w << " " << p[i].h << endl;
		weight.push_back(p[i].w);
		height.push_back(p[i].h);
	}
	calc_LIS(weight, height);
}
/*int main(void){
				Circus obj;

				obj.makeTower();

				return 0;
}*/
